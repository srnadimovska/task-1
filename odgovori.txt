1.Што е World Wide Web?
- World Wide Web (WWW)  е глобален систем на поврзани документи
 и мултимедиски содржини кои се достапни преку интернет и се 
 прегледуваат со помош на веб-браузери. 
 Тоа е систем кој овозможува поврзување на различни ресурси, 
 како текст, слики, видеа и други мултимедиски форми, 
 преку хиперврски и УРЛ-адреси.

 2.Какви пораки се испраќаат преку HTTP помеѓу клиентот и серверот?
 - Во протоколот HTTP (Hypertext Transfer Protocol), 
 комуникацијата помеѓу клиентот (како што е веб прелистувачот) 
 и серверот се одвива преку размена на различни HTTP пораки. 
 Овие пораки можат да бидат барања (requests: методи get,post,patch,delete.., url,
 ) кои ги испраќа 
 клиентот кон серверот, и одговори (responses:HTTP Status Code,JSON,HTML...) кои ги испраќа 
 серверот назад до клиентот.

 3. Што е Node.js, а што е Express.js?
 - Node.js е серверски JavaScript ранец (runtime), кој овозможува извршување 
 на JavaScript на серверот. 
 Express.js е рамка (framework) за Node.js. Тоа е алатка која го поедноставува создавањето 
 на веб апликации и API-и со Node.js.
 Node.js: Се користи за создавање на серверот. Тоа е основата
  на која се градат апликациите.

Express.js: Овозможува да се креираат рутери, middleware и други компоненти на серверската логика,
 за да се поедностави процесот на развој.

Со други зборови, Node.js е серверската платформа, додека 
Express.js е рамка која го поедноставува работењето со таа платформа.

4. Што е MVC архитектура и што е обврската на нејзините составни делови?
-MVC (Model-View-Controller) 
 архитектура која се користи за развој на софтверски апликации.
 Ја дели апликацијата во три главни компоненти, со цел да се постигне 
 одвојување на логиката на апликацијата, интерфејсот и контролата, што го прави кодот 
поорганизиран и полесен за одржување и проширување.
МОДЕЛ - ги опишува податоците и бизнис логиката
VIEW - Опишува како се прикажуваат податоците на крајниот корисник
CONTROLLER - Опишува логиката која ја контролира интеракцијата помеѓу моделот и приказот.

5. Што се рути?
- Рутите ги дефинираат URL патеките на кои серверот ќе реагира 
и го поврзуваат тие патеки со одредени методи или функции на серверот. 
Овие руте може да бидат дефинирани за различни типови на HTTP барања, 
како што се GET, POST, PUT, DELETE, итн.

6. Што се модули и какви типови има?
- Модули се единици на код кои се диајнирани да бидат повторно користени, организирани и одделени
од другите делови на апликацијата.
Се користат за да се организира кодот и да се обезбеди
негова ре-usability. Тие се делат наЧ Локални моднули(модули создадени
во рамки на една апликација), Вградени модули(Модули кои се Вградениво Node.js
и овозможуваат работа со датотеки,патеки итн - фс,хттп,патх) и Third-party модуликои 
не се вградени во Node.js, туку се инсталираат од надворешни изворишта, како што е npm (Node Package Manager).
 Тие нудат разни библиотеки
 и алатки за додавање на функционалности во вашата апликација.

 7.Што е веб сервис и дадете еден пример?
 Веб сервисите се моќни алатки кои дозволуваат различни апликации да 
 комуницираат преку интернет, овозможувајќи
  размена на податоци и извршување на операции.
  Пример за веб сервис е RESTFUL API - Во оваа апликација, 
  можете да креирате RESTful веб сервис кој ќе им овозможи на корисниците да 
  додадат, изменат или избришат производи преку HTTP барања.

8. Објаснете што е и како функционира JWT автентикација?
- JWT (JSON Web Token) е стандард за пренос на информации меѓу
 страните во безбедна и компактна форма, која е лесно пренослива. 
 Обично се користи за автентикација и овластување на корисници во веб апликации.
  JWT се базира на JSON формат и овозможува серверите
 и клиентите да разменуваат сигурни информации преку интернет.
 JWT е токен кој содржи потпишани  информации за корисникот Овие токени обично се користат
 за да се потврди идентитетот на корисникот и 
 да му се дозволи пристап до одредени ресурси.
 Токенот се сосавен од HEADER, PAYLOAD и SIGNATURE.
 JWT автентикација функционира така што кога кориснјукот ќе се логира,
 или регистрира, серверот проверува и ако се податоците точни испраќа JWT токен кој 
 содржи кориснички податоци и овој токен се испраќа назад на корисникот каде се зачувува
 токенот во local storage И за секое наредно барање се испраќа токенотво Authorization
 header како Bearer token.Кога серверот ќе го добие барањето со токеноттој го 
 декодира и го верификува потписот со помош на key.

 9.Што е MongoDB?
 Тоа е нерелациона база на податоци која ги зачувува податоците воформа 
 на JSONобјекти. Таа функционира врз база на документи во колекции.

 10.Што е разликата помеѓу MongoDB И Mongoose?
 - МонгоДБ е база на податоци, додека пак Mongoose е библиотеказа MONGODB,
 која се користи во Node.js И овозможува да се работи со MongoDB.

 11.Што е разликата помеѓу Синхрона и асинхрона функција во Node.js?
 - Во Node.js, разликата помеѓу синхроната и асинхроната функција се однесува на 
 тоа како тие ја обработуваат задачата и како се 
 однесуваат на пораки (requests) и време на извршување.
 Синхроните функции се оние кои секоја задача ја обработуваат 
 една по една, во редоследот во кој се повикуваат. 
 Тие блокираат извршувањето на следната операција додека 
 тековната не заврши. Тоа значи дека ако една задача 
 (на пример, читање на датотека или пребарување на база 
 на податоци) трае долго, целиот процес ќе биде 
 задржан додека не се заврши таа задача.
 Асинхроните функции, од друга страна, овозможуваат паралелно
  извршување на задачите. Кога функцијата се повикува, таа не 
  го блокира извршувањето на следните задачи. Наместо тоа, 
  асинхроната функција ја обработува задачата во позадина, а 
  кога задачата ќе заврши, повторно се повикува callback 
  функцијата или промис/async-await за да се продолжи со 
  следната операција.
